<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowViewMenuPermission" xml:space="preserve">
    <value>允许查看“{0}”菜单功能！</value>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>MM月dd日</value>
  </data>
  <data name="DaysBefore" xml:space="preserve">
    <value>{0} 天前</value>
  </data>
  <data name="ErrorCode_AuthorizeFailure" xml:space="preserve">
    <value>验证失败！</value>
  </data>
  <data name="ErrorCode_Failured" xml:space="preserve">
    <value>失败！</value>
  </data>
  <data name="ErrorCode_InvalidParameter" xml:space="preserve">
    <value>参数“{0}”无效!</value>
  </data>
  <data name="ErrorCode_InvalidToken" xml:space="preserve">
    <value>令牌无效！</value>
  </data>
  <data name="ErrorCode_NullParameter" xml:space="preserve">
    <value>参数“{0}”不能为空!</value>
  </data>
  <data name="ErrorCode_Succeeded" xml:space="preserve">
    <value>成功！</value>
  </data>
  <data name="ErrorCode_TokenExpired" xml:space="preserve">
    <value>令牌过期！</value>
  </data>
  <data name="ErrorCode_UnknownError" xml:space="preserve">
    <value>很抱歉，发生了未知的错误！</value>
  </data>
  <data name="HoursBefore" xml:space="preserve">
    <value>{0} 小时前</value>
  </data>
  <data name="JustNow" xml:space="preserve">
    <value>刚刚</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>上一页</value>
  </data>
  <data name="LogAction_Add" xml:space="preserve">
    <value>新增了</value>
  </data>
  <data name="LogAction_AddFormat" xml:space="preserve">
    <value>”{0}“(”{1}“)</value>
  </data>
  <data name="LogAction_Modify" xml:space="preserve">
    <value>修改了</value>
  </data>
  <data name="LogAction_ModifyFormat" xml:space="preserve">
    <value>“{0}”由”{1}“修改为“{2}”</value>
  </data>
  <data name="LogAction_Remove" xml:space="preserve">
    <value>移除了</value>
  </data>
  <data name="LogAction_RemoveFormat" xml:space="preserve">
    <value>”{0}“(”{1}“)</value>
  </data>
  <data name="MunitesBefore" xml:space="preserve">
    <value>{0} 分钟前</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>下一页</value>
  </data>
  <data name="NumberPage" xml:space="preserve">
    <value>第{0}页</value>
  </data>
  <data name="SelectDefaultText" xml:space="preserve">
    <value>请选择</value>
  </data>
  <data name="YearDateFormat" xml:space="preserve">
    <value>yyyy年MM月dd日</value>
  </data>
  <data name="Mozmd_ModePreview" xml:space="preserve">
    <value>预览</value>
  </data>
  <data name="Mozmd_FullScreen" xml:space="preserve">
    <value>全屏显示</value>
  </data>
  <data name="Mozmd_Syntax_Header" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="Mozmd_Syntax_Bold" xml:space="preserve">
    <value>加粗</value>
  </data>
  <data name="Mozmd_Syntax_Italic" xml:space="preserve">
    <value>斜体</value>
  </data>
  <data name="Mozmd_Syntax_Code" xml:space="preserve">
    <value>代码</value>
  </data>
  <data name="Mozmd_Syntax_Ul" xml:space="preserve">
    <value>列表</value>
  </data>
  <data name="Mozmd_Syntax_Ol" xml:space="preserve">
    <value>排序</value>
  </data>
  <data name="Mozmd_Syntax_Link" xml:space="preserve">
    <value>链接</value>
  </data>
  <data name="Mozmd_Syntax_Quote" xml:space="preserve">
    <value>引用</value>
  </data>
  <data name="ErrorCode_InvalidPostData" xml:space="preserve">
    <value>POST的数据无效！</value>
  </data>
  <data name="Mozmd_Syntax_Image" xml:space="preserve">
    <value>图片</value>
  </data>
  <data name="ErrorCode_NotFound" xml:space="preserve">
    <value>未找到{0}！</value>
  </data>
  <data name="Api_EventType" xml:space="preserve">
    <value>开放平台</value>
  </data>
  <data name="LinkTarget_Self" xml:space="preserve">
    <value>_self</value>
  </data>
  <data name="LinkTarget_Blank" xml:space="preserve">
    <value>_blank</value>
  </data>
  <data name="LinkTarget_Parent" xml:space="preserve">
    <value>_parent</value>
  </data>
  <data name="LinkTarget_Top" xml:space="preserve">
    <value>_top</value>
  </data>
</root>